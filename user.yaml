openapi: "3.0.0"
info:
  version: 1.0.0
  title: Swagger User
  license:
    name: MIT
  contact:
    email: you@sophossolution.com
security:
- OAuth2:
  - read
servers:
  - url: https://user.sophosolutions.com/api/1.0.0
paths:
  /users:
    get:
      summary: List all users
      operationId: listUsers
      tags:
        - users
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
            example: 10
      responses:
        '200':
          description: A paged array of users
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Users"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Adds a new user
      operationId: createUser
      tags:
        - users
      requestBody:
        content:
          application/json:
            schema:     
              $ref: '#/components/schemas/User'
            examples:   
              Jessica:
                value:
                  id: 10
                  name: Jessica Smith
              Ron:
                value:
                  id: 11
                  name: Ron Stewart
                  tag: TI
      responses:
        '200':
          description: A user object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User' 
              examples:
                Jessica:
                  value:
                    id: 10
                    name: Jessica Smith
                Ron:
                  value:
                    id: 11
                    name: Ron Stewart
                    tag: TI
        '400':
          description: invalid input, object invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '409':
          description: an existing item already exists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error" 
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"           
  /users/{id}:
    get:
      summary: Info for a specific user
      operationId: showUserById
      tags:
        - user
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the user to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    User:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: carlos  
        tag:
          type: string
          example: TI 
    Users:
      type: array
      items:
        $ref: "#/components/schemas/User"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          example: 1 
        message:
          type: string
          example: Fallo servidor 